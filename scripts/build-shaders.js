const fs = require('fs');
const path = require('path');
const child_process = require('child_process');

const files = fs.readdirSync('src/shaders');

const shaderNames = new Set();
for (let file of files) {
  const p = path.parse(file);
  if (p.ext === '.vs' || p.ext === '.fs') {
    shaderNames.add(p.name);
  }
}

for (let shaderName of shaderNames) {
  const vsPath = path.join('src/shaders', `${shaderName}.vs`);
  const fsPath = path.join('src/shaders', `${shaderName}.fs`);
  const outputPath = path.join('src/shaders', `${shaderName}.ts`);

  console.log(`generating ${shaderName} -> ${outputPath}`)
  const ts = child_process.spawnSync(
    'ts-shader', [vsPath, fsPath, '-t', '-e', 'ShaderProgram'], {shell: true}
  );

  if (ts.status !== 0) {
    console.log(`ts-shader exited with ${ts.status}: ${ts.stderr}`);
    continue;
  }

  // prepend import
  const source = `// Autogenerated file
import ShaderProgram from '../shaderprogram';
${ts.stdout}`;

  fs.writeFileSync(outputPath, source);
}

console.log('done');
